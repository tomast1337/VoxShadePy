?start: statement+

?statement: if_stmt
          | return_stmt
          | assign_stmt
          | expr_stmt

if_stmt: "if" expr block
block:  "{" statement* "}"

return_stmt: "return" expr ";"
assign_stmt: NAME "=" expr ";"
expr_stmt: expr ";"

?expr: logic

?logic: arith (comp_op arith)?  -> compare

?arith: arith "+" term          -> add
      | arith "-" term          -> sub
      | term

?term: term "*" factor          -> mul
     | term "/" factor          -> div
     | factor

?factor: func_call
       | atom

func_call: NAME "(" [expr ("," expr)*] ")"

?atom: NUMBER                   -> number
     | NAME                     -> var
     | "(" expr ")"

comp_op: "==" | "!=" | "<" | ">" | "<=" | ">="

NAME: /(?!if|return)\b[a-zA-Z_][a-zA-Z0-9_]*\b/
NUMBER: /\d+(\.\d+)?/

%ignore /\s+/
%ignore /\/\/[^\n]*/
